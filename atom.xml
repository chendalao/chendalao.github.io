<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thor&#39;s Home</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-10T10:43:26.800Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>HCY</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156.html"/>
    <id>http://example.com/posts/4a17b156.html</id>
    <published>2022-10-10T10:39:40.509Z</published>
    <updated>2022-10-10T10:43:26.800Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/posts/0.html"/>
    <id>http://example.com/posts/0.html</id>
    <published>2022-10-10T10:39:40.506Z</published>
    <updated>2022-10-08T13:41:16.304Z</updated>
    
    <content type="html"><![CDATA[<h4 id="一、工具包之间传输中间结果的方法"><a href="#一、工具包之间传输中间结果的方法" class="headerlink" title="一、工具包之间传输中间结果的方法"></a>一、工具包之间传输中间结果的方法</h4><p>1.<strong>使用Pipe</strong></p><p><strong>Pipe（管道）</strong>，是 Unix&#x2F;Linux 系统中一种比较常用的 IPC(Inter Process Communication) 。</p><p>$ls$ 和 $wc$ 分别是两个独立的进程。shell 会将 ls 的输出结果作为 $wc$ 的输入结果，然后再由$wc$ 把处理结果投放到终端上。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-7917506/h8nlv3997i.png?imageView2/2/w/1620" alt="img"></p><p>上图很生动地描绘出这组命令的工作流程。pipe 就像一根圆管，ls 的输出内容流入到圆管的一端 (标准输出)。随后，内容一直流到圆管的另一端 (标准输入) 由 wc 接收。这跟圆管只接受 byte stream，也就是说消息内容是无边界的。</p><p>2.<strong>用grep</strong></p><p>3.<strong>用redirect</strong></p><h4 id="二、命令行工具"><a href="#二、命令行工具" class="headerlink" title="二、命令行工具"></a>二、命令行工具</h4><p><strong>1.ag</strong></p><p><strong>2.ripgrep</strong></p><p><strong>3.awk</strong></p><p><strong>4.sed</strong></p><h4 id="三、shell（Bash）Batch-Script"><a href="#三、shell（Bash）Batch-Script" class="headerlink" title="三、shell（Bash）Batch Script"></a>三、shell（Bash）Batch Script</h4>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;一、工具包之间传输中间结果的方法&quot;&gt;&lt;a href=&quot;#一、工具包之间传输中间结果的方法&quot; class=&quot;headerlink&quot; title=&quot;一、工具包之间传输中间结果的方法&quot;&gt;&lt;/a&gt;一、工具包之间传输中间结果的方法&lt;/h4&gt;&lt;p&gt;1.&lt;strong&gt;使用Pi</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156.html"/>
    <id>http://example.com/posts/4a17b156.html</id>
    <published>2022-10-10T02:44:37.856Z</published>
    <updated>2022-10-10T09:41:10.243Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
