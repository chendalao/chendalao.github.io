<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>shell命令学习</title>
      <link href="/posts/f04a1e6f.html"/>
      <url>/posts/f04a1e6f.html</url>
      
        <content type="html"><![CDATA[<h4 id="一、工具包之间传输中间结果的方法"><a href="#一、工具包之间传输中间结果的方法" class="headerlink" title="一、工具包之间传输中间结果的方法"></a>一、工具包之间传输中间结果的方法</h4><p>1.<strong>使用Pipe</strong></p><p><strong>Pipe（管道）</strong>，是 Unix&#x2F;Linux 系统中一种比较常用的 IPC(Inter Process Communication) 。</p><p>$ls$ 和 $wc$ 分别是两个独立的进程。shell 会将 ls 的输出结果作为 $wc$ 的输入结果，然后再由$wc$ 把处理结果投放到终端上。</p><p><img src="https://ask.qcloudimg.com/http-save/yehe-7917506/h8nlv3997i.png?imageView2/2/w/1620" alt="img"></p><p>上图很生动地描绘出这组命令的工作流程。pipe 就像一根圆管，ls 的输出内容流入到圆管的一端 (标准输出)。随后，内容一直流到圆管的另一端 (标准输入) 由 wc 接收。这跟圆管只接受 byte stream，也就是说消息内容是无边界的。</p><p>2.<strong>用grep</strong></p><p>3.<strong>用redirect</strong></p><h4 id="二、命令行工具"><a href="#二、命令行工具" class="headerlink" title="二、命令行工具"></a>二、命令行工具</h4><p><strong>1.ag</strong></p><p><strong>2.ripgrep</strong></p><p><strong>3.awk</strong></p><p><strong>4.sed</strong></p><h4 id="三、shell（Bash）Batch-Script"><a href="#三、shell（Bash）Batch-Script" class="headerlink" title="三、shell（Bash）Batch Script"></a>三、shell（Bash）Batch Script</h4>]]></content>
      
      
      <categories>
          
          <category> 工具学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cmake学习</title>
      <link href="/posts/72bbddf7.html"/>
      <url>/posts/72bbddf7.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 工具学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> cmake </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
